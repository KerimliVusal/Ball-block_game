{"version":3,"sources":["components/load.js","utils.js","game/levels.js","game/vector.js","game/core.js","components/level.js","components/lives.js","components/block.js","components/paddle.js","components/ball.js","components/scene.js","components/page.js","App.js","serviceWorker.js","index.js"],"names":["Load","react_default","a","createElement","className","src","alt","getRange","length","Object","toConsumableArray","Array","keys","getRandomFrom","_len","arguments","args","_key","Math","floor","random","registerListener","eventName","handler","window","addEventListener","removeEventListener","getRandomBlock","getBlocks","rows","columns","map","LEVELS","lives","paddleWidth","speed","blocks","Vector","x","y","classCallCheck","this","number","hypot","_ref","scaleBy","_ref2","_ref3","other","amt","dotProduct","normal","subtract","projectOn","degrees","radians","PI","toRadians","cos","sin","_ref4","atan2","crossProduct","MOVEMENT","LEFT","RIGHT","UP","DOWN","LEFT_UP","add","normalize","RIGHT_UP","getInitialPaddleAndBall","width","height","paddleY","paddle","position","ball","center","BALL_RADIUS","radius","direction","getGameStateFromLevel","arrays","blocksStart","rowsOfBlocks","row","i","density","j","size","objectSpread","reduce","acc","concat","isInBoundaries","oneSide","otherSide","oneBoundary","otherBoundary","getNewGameState","state","movement","timespan","distance","withNewX","getNewPaddle","oldDirection","newBallCenter","ballBottom","withNewBallProps","props","withNewBallDirection","vector","minAngle","undefined","angle","angleBetween","maxAngle","rotate","getAdjustedVector","distortionLevel","getComponent","distortion","getDistortedDirection","reflect","ballLeft","ballRight","ballTop","paddleLeft","paddleRight","paddleTop","abs","array","element","block","find","newBlock","filter","e","oldElement","newElement","updateElement","blockTop","blockBottom","blockLeft","getNewBallNormal","components_level","level","unit","fontSize","components_lives","containerWidth","rx","key","colors","components_block","fill","Paddle","components_ball","cx","cy","r","MOVEMENT_KEYS","getProjectors","containerSize","gameSize","widthRatio","heightRatio","unitOnScreen","min","projectDistance","projectVector","getInitialState","inState","localStorage","getItem","parseInt","getInitialLevel","game","_getProjectors","time","Date","now","stopTime","ACTION","HANDLER","_HANDLER","defineProperty","includes","newState","newGame","alert","setItem","reducer","type","payload","scene","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","act","_state$game","_state$game$size","useEffect","timerId","setInterval","unregisterKeydown","which","unregisterKeyup","clearInterval","viewWidth","assign","components_paddle","Page","sceneContainer","useRef","_useState","useState","_useState2","setSize","onResize","_sceneContainer$curre","current","getBoundingClientRect","unregisterResizeListener","ref","App","loa","setLoa","setTimeout","load","page","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d76e83d.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Load=()=>{\r\n    return(<div className='loa'>\r\n            <h1 className='animate'>\r\n            <div><img src={\"/breakout-tutorial.gif\"}  alt=\"gif loadergi\" className='img'/></div>\r\n               <div>Next Movies . . .</div></h1>\r\n    </div>\r\n    );\r\n};export default Load","export const toDegrees = radians => (radians * 180) / Math.PI\r\nexport const toRadians = degrees => (degrees * Math.PI) / 180\r\n\r\nexport const getRange = length => [...Array(length).keys()]\r\nexport const getRandomFrom = (...args) => args[Math.floor(Math.random() * args.length)]\r\nexport const flatten = arrays => arrays.reduce((acc, row) => [...acc, ...row], [])\r\nexport const withoutElement = (array, element) => array.filter(e => e !== element)\r\nexport const updateElement = (array, oldElement, newElement) => array.map(e => e === oldElement ? newElement : e)\r\n\r\nexport const registerListener = (eventName, handler) => {\r\n  window.addEventListener(eventName, handler)\r\n  return () => window.removeEventListener(eventName, handler)\r\n}","import { getRange } from '../utils'\r\n\r\nexport const BLOCK_MAX_DENSITY = 3\r\n\r\nconst getRandomBlock = () => Math.floor(Math.random() * BLOCK_MAX_DENSITY)\r\n\r\nconst getBlocks = (rows, columns) =>\r\n  getRange(rows).map(() => getRange(columns).map(getRandomBlock))\r\n\r\nexport const LEVELS = [\r\n  {\r\n    lives: 5,\r\n    paddleWidth: 3.5,\r\n    speed: 1,\r\n    blocks: getBlocks(3, 6)\r\n  },\r\n  {\r\n    lives: 4,\r\n    paddleWidth: 3,\r\n    speed: 1.4,\r\n    blocks: getBlocks(4, 7)\r\n  },\r\n  {\r\n    lives: 3,\r\n    paddleWidth: 2.5,\r\n    speed: 1.8,\r\n    blocks: getBlocks(5, 8)\r\n  },\r\n  {\r\n    lives: 3,\r\n    paddleWidth: 2,\r\n    speed: 2.2,\r\n    blocks: getBlocks(6, 9)\r\n  },\r\n]\r\n","import { toDegrees, toRadians } from '../utils'\r\n\r\nexport default class Vector {\r\n  constructor(x, y) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  scaleBy(number) {\r\n    return new Vector(this.x * number, this.y * number);\r\n  }\r\n\r\n  length() {\r\n    return Math.hypot(this.x, this.y)\r\n  }\r\n\r\n  add({ x, y }) {\r\n    return new Vector(this.x + x, this.y + y)\r\n  }\r\n\r\n  normalize() {\r\n    return this.scaleBy(1 / this.length())\r\n  }\r\n\r\n  subtract({ x, y }) {\r\n    return new Vector(this.x - x, this.y - y)\r\n  }\r\n\r\n  dotProduct({ x, y }) {\r\n    return this.x * x + this.y * y\r\n  }\r\n\r\n  projectOn(other) {\r\n    const amt = this.dotProduct(other) / other.length()\r\n    return new Vector(amt * other.x, amt * other.y)\r\n  }\r\n\r\n  reflect(normal) {\r\n    return this.subtract(this.projectOn(normal).scaleBy(2))\r\n  }\r\n\r\n  rotate(degrees) {\r\n    const radians = toRadians(degrees)\r\n    const cos = Math.cos(radians)\r\n    const sin = Math.sin(radians)\r\n\r\n    return new Vector(\r\n      this.x * cos - this.y * sin,\r\n      this.x * sin + this.y * cos\r\n    )\r\n  }\r\n\r\n  crossProduct({ x, y }) {\r\n    return this.x * y - x * this.y\r\n  }\r\n\r\n  angleBetween(other) {\r\n    return toDegrees(\r\n      Math.atan2(this.crossProduct(other), this.dotProduct(other))\r\n    )\r\n  }\r\n}","import Vector from './vector'\r\nimport { flatten, getRandomFrom, withoutElement, updateElement } from '../utils'\r\n\r\nconst PADDLE_AREA = 1 / 3\r\nconst BLOCK_HEIGHT = 1 / 3\r\nconst PADDLE_HEIGHT = BLOCK_HEIGHT\r\nconst BALL_RADIUS = 1 / 5\r\nconst DISTANCE_IN_MS = 0.005\r\n\r\nexport const MOVEMENT = {\r\n  LEFT: 'LEFT',\r\n  RIGHT: 'RIGHT'\r\n}\r\n\r\nconst LEFT = new Vector(-1, 0)\r\nconst RIGHT = new Vector(1, 0)\r\nconst UP = new Vector(0, -1)\r\nconst DOWN = new Vector(0, 1)\r\n\r\nconst LEFT_UP = LEFT.add(UP).normalize()\r\nconst RIGHT_UP = RIGHT.add(UP).normalize()\r\n\r\nexport const getInitialPaddleAndBall = (width, height, paddleWidth) => {\r\n  const paddleY = height - PADDLE_HEIGHT\r\n  const paddle = {\r\n    position: new Vector((width - paddleWidth) / 2, paddleY),\r\n    width: paddleWidth,\r\n    height: PADDLE_HEIGHT\r\n  }\r\n  const ball = {\r\n    center: new Vector(height / 2, paddleY - BALL_RADIUS * 2),\r\n    radius: BALL_RADIUS,\r\n    direction: getRandomFrom(LEFT_UP, RIGHT_UP)\r\n  }\r\n\r\n  return {\r\n    paddle,\r\n    ball\r\n  }\r\n}\r\n\r\nexport const getGameStateFromLevel = ({ lives, paddleWidth, speed, blocks }) => {\r\n  const width = blocks[0].length\r\n  const height = width\r\n\r\n  const blocksStart = ((height - height * PADDLE_AREA) - blocks.length * BLOCK_HEIGHT) / 2\r\n\r\n  const rowsOfBlocks = blocks.map((row, i) =>\r\n    row.map((density, j) => ({\r\n      density,\r\n      position: new Vector(j, blocksStart + (i * BLOCK_HEIGHT)),\r\n      width: 1,\r\n      height: BLOCK_HEIGHT\r\n    })\r\n  ))\r\n\r\n  const size = {\r\n    width,\r\n    height\r\n  }\r\n  return {\r\n    size,\r\n    blocks: flatten(rowsOfBlocks),\r\n    ...getInitialPaddleAndBall(width, height, paddleWidth),\r\n    lives,\r\n    speed\r\n  }\r\n}\r\n\r\nconst getDistortedDirection = (vector, distortionLevel = 0.3) => {\r\n  const getComponent = () => Math.random() * distortionLevel - distortionLevel / 2\r\n  const distortion = new Vector(getComponent(), getComponent())\r\n  return vector.add(distortion).normalize()\r\n}\r\n\r\nconst getNewPaddle = (paddle, size, distance, movement) => {\r\n  if (!movement) return paddle\r\n  const direction = movement === MOVEMENT.LEFT ? LEFT : RIGHT\r\n\r\n  const { x } = paddle.position.add(direction.scaleBy(distance))\r\n  const withNewX = x => ({\r\n    ...paddle,\r\n    position: new Vector(x, paddle.position.y)\r\n  })\r\n  if (x < 0) {\r\n    return withNewX(0)\r\n  }\r\n  if (x + paddle.width > size.width) {\r\n    return withNewX(size.width - paddle.width)\r\n  }\r\n  return withNewX(x)\r\n}\r\n\r\nconst isInBoundaries = (oneSide, otherSide, oneBoundary, otherBoundary) => (\r\n  (oneSide >= oneBoundary && oneSide <= otherBoundary) ||\r\n  (otherSide >= oneBoundary && otherSide <= otherBoundary)\r\n)\r\n\r\nconst getAdjustedVector = (normal, vector, minAngle = 15) => {\r\n  const angle = normal.angleBetween(vector)\r\n  const maxAngle = 90 - minAngle\r\n  if (angle < 0) {\r\n    if (angle > -minAngle) {\r\n      return normal.rotate(-minAngle)\r\n    }\r\n    if (angle < -maxAngle) {\r\n      return normal.rotate(-maxAngle)\r\n    }\r\n  } else {\r\n    if (angle < minAngle) {\r\n      return normal.rotate(minAngle)\r\n    }\r\n    if (angle > maxAngle) {\r\n      return normal.rotate(maxAngle)\r\n    }\r\n  }\r\n  return vector\r\n}\r\n\r\nexport const getNewGameState = (state, movement, timespan) => {\r\n  const { size, speed, lives } = state\r\n  const distance = timespan * DISTANCE_IN_MS * speed\r\n  const paddle = getNewPaddle(state.paddle, size, distance, movement)\r\n\r\n  const { radius } = state.ball\r\n  const oldDirection = state.ball.direction\r\n  const newBallCenter = state.ball.center.add(oldDirection.scaleBy(distance))\r\n  const ballBottom = newBallCenter.y + radius\r\n  if (ballBottom > size.height) {\r\n    return {\r\n      ...state,\r\n      ...getInitialPaddleAndBall(size.width, size.height, paddle.width),\r\n      lives: lives - 1\r\n    }\r\n  }\r\n  \r\n  const withNewBallProps = props => ({\r\n    ...state,\r\n    paddle,\r\n    ball: {\r\n      ...state.ball,\r\n      ...props\r\n    }\r\n  })\r\n\r\n  const withNewBallDirection = normal => {\r\n    const distorted = getDistortedDirection(oldDirection.reflect(normal))\r\n    const direction = getAdjustedVector(normal, distorted)\r\n    return withNewBallProps({ direction })\r\n  }\r\n  const ballLeft = newBallCenter.x - radius\r\n  const ballRight = newBallCenter.x + radius\r\n  const ballTop = newBallCenter.y - radius\r\n  const paddleLeft = paddle.position.x\r\n  const paddleRight = paddleLeft+ paddle.width\r\n  const paddleTop = paddle.position.y\r\n\r\n  const ballGoingDown = Math.abs(UP.angleBetween(oldDirection)) > 90\r\n  const hitPaddle = ballGoingDown && ballBottom >= paddleTop && ballRight >= paddleLeft && ballLeft <= paddleRight\r\n  if (hitPaddle) return withNewBallDirection(UP)\r\n  if (ballTop <= 0) return withNewBallDirection(DOWN)\r\n  if (ballLeft <= 0) return withNewBallDirection(RIGHT)\r\n  if (ballRight >= size.width) return withNewBallDirection(LEFT)\r\n\r\n  const block = state.blocks.find(({ position, width, height }) => (\r\n    isInBoundaries(ballTop, ballBottom, position.y, position.y + height) &&\r\n    isInBoundaries(ballLeft, ballRight, position.x, position.x + width) \r\n  ))\r\n  if (block) {\r\n    const density = block.density - 1\r\n    const newBlock = { ...block, density }\r\n    const blocks = density < 0 ? withoutElement(state.blocks, block) : updateElement(state.blocks, block, newBlock)\r\n    \r\n    const getNewBallNormal = () => {\r\n      const blockTop = block.position.y\r\n      const blockBottom = blockTop + block.height\r\n      const blockLeft = block.position.x\r\n      if (ballTop > blockTop - radius && ballBottom < blockBottom + radius) {\r\n        if (ballLeft < blockLeft) return LEFT\r\n        if (ballRight > blockLeft + block.width) return RIGHT\r\n      }\r\n      if (ballTop > blockTop) return DOWN\r\n      if (ballTop <= blockTop) return UP\r\n    }\r\n    return {\r\n      ...withNewBallDirection(getNewBallNormal()),\r\n      blocks\r\n    }\r\n  }\r\n  return withNewBallProps({ center: newBallCenter })\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ level, unit }) => (\r\n  <text x={unit} y={unit * 2} fontSize={unit} className='level'>LEVEL: {level}</text>\r\n)\r\n","import React from 'react'\r\n\r\nimport { getRange } from '../utils'\r\n\r\nexport default ({ lives, containerWidth, unit }) => {\r\n  const width = unit * 2\r\n  return getRange(lives).map(i => (\r\n    <rect\r\n      className='life'\r\n      rx={unit / 4}\r\n      height={unit}\r\n      width={width}\r\n      y={unit}\r\n      x={containerWidth - unit - width * (i + 1) - (unit / 2) * i}\r\n      key={i}\r\n    />\r\n  ))\r\n}","import React from 'react'\r\nimport { getRange } from '../utils'\r\nimport { BLOCK_MAX_DENSITY } from '../game/levels'\r\n\r\nconst colors = getRange(BLOCK_MAX_DENSITY).map(i => `rgba(226, 100, 10, ${1 / (BLOCK_MAX_DENSITY - i)})`)\r\n\r\nexport default ({ x, y, width, height, density }) => (\r\n  <rect className='block' fill={colors[density]} x={x} y={y} width={width} height={height} />\r\n)","\r\nimport React from 'react'\r\n\r\n  const Paddle=({ x, y, width, height }) => (\r\n  <rect className='paddle' x={x} y={y} width={width} height={height} />\r\n);export default Paddle","import React from 'react'\r\n\r\nexport default ({ x, y, radius }) => (\r\n  <circle className='ball' cx={x} cy={y} r={radius} />\r\n)","import React, { useEffect, useReducer } from 'react'\r\n\r\nimport { LEVELS } from '../game/levels'\r\nimport { MOVEMENT, getNewGameState, getGameStateFromLevel } from '../game/core'\r\nimport { registerListener } from '../utils'\r\n\r\nimport Level from './level'\r\nimport Lives from './lives'\r\nimport Block from './block'\r\nimport Paddle from './paddle'\r\nimport Ball from './ball'\r\n\r\nconst MOVEMENT_KEYS = {\r\n  LEFT: [15, 37],\r\n  RIGHT: [18, 39]\r\n}\r\n\r\nconst STOP_KEY = 32\r\n\r\nconst UPDATE_EVERY = 1000 / 60\r\n\r\nconst getInitialLevel = () => {\r\n  const inState = localStorage.getItem('level')\r\n  return inState ? parseInt(inState, 10) : 0\r\n}\r\n\r\nconst getProjectors = (containerSize, gameSize) => {\r\n  const widthRatio = containerSize.width / gameSize.width\r\n  const heightRatio = containerSize.height / gameSize.height\r\n  const unitOnScreen = Math.min(widthRatio, heightRatio)\r\n\r\n  return {\r\n    projectDistance: distance => distance * unitOnScreen,\r\n    projectVector: vector => vector.scaleBy(unitOnScreen)\r\n  }\r\n}\r\n\r\nconst getInitialState = containerSize => {\r\n  const level = getInitialLevel()\r\n  const game = getGameStateFromLevel(LEVELS[level])\r\n  const { projectDistance, projectVector } = getProjectors(containerSize, game.size)\r\n  return {\r\n    level,\r\n    game,\r\n    containerSize,\r\n    projectDistance,\r\n    projectVector,\r\n    time: Date.now(),\r\n    stopTime: undefined,\r\n    movement: undefined\r\n  }\r\n}\r\n\r\nconst ACTION = {\r\n  CONTAINER_SIZE_CHANGE: 'CONTAINER_SIZE_CHANGE',\r\n  KEY_DOWN: 'KEY_DOWN',\r\n  KEY_UP: 'KEY_UP',\r\n  TICK: 'TICK'\r\n}\r\n\r\nconst HANDLER = {\r\n  [ACTION.CONTAINER_SIZE_CHANGE]: (state, containerSize) => ({\r\n    ...state,\r\n    containerSize,\r\n    ...getProjectors(containerSize, state.game.size)\r\n  }),\r\n  [ACTION.KEY_DOWN]: (state, key) => {\r\n    if (MOVEMENT_KEYS.LEFT.includes(key)) {\r\n      return { ...state, movement: MOVEMENT.LEFT }\r\n    } else if (MOVEMENT_KEYS.RIGHT.includes(key)) {\r\n      return { ...state, movement: MOVEMENT.RIGHT }\r\n    }\r\n    return state\r\n  },\r\n  [ACTION.KEY_UP]: (state, key) => {\r\n    const newState = { ...state, movement: undefined }\r\n    if (key === STOP_KEY) {\r\n      if (state.stopTime) {\r\n        return { ...newState, stopTime: undefined, time: state.time + Date.now() - state.stopTime}\r\n      } else {\r\n        return { ...newState, stopTime: Date.now() }\r\n      }\r\n    }\r\n    return newState\r\n  },\r\n  [ACTION.TICK]: state => {\r\n    if (state.stopTime) return state\r\n\r\n    const time = Date.now()\r\n    const newGame = getNewGameState(state.game, state.movement, time - state.time)\r\n    const newState = { ...state, time }\r\n    if (newGame.lives < 1) {\r\n      alert('Chance is over')\r\n      return { ...newState, game: getGameStateFromLevel(LEVELS[state.level]) }\r\n    } else if (newGame.blocks.length < 1) {\r\n      alert('You win')\r\n      const level = state.level === LEVELS.length ? state.level : state.level + 1\r\n      localStorage.setItem('level', level)\r\n      const game = getGameStateFromLevel(LEVELS[state.level])\r\n      return {\r\n        ...newState,\r\n        level,\r\n        game,\r\n        ...getProjectors(state.containerSize, game.size)\r\n      }\r\n    }\r\n    return { ...newState, game: newGame }\r\n  }\r\n}\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  const handler = HANDLER[type]\r\n  if (!handler) return state\r\n  return handler(state, payload)\r\n}\r\n\r\nexport default (containerSize) => {\r\n  const [state, dispatch] = useReducer(reducer, containerSize, getInitialState)\r\n  const act = (type, payload) => dispatch({ type, payload })\r\n  const {\r\n    projectDistance,\r\n    projectVector,\r\n    level,\r\n    game: {\r\n      blocks,\r\n      paddle,\r\n      ball,\r\n      size: {\r\n        width,\r\n        height\r\n      },\r\n      lives\r\n    }\r\n  } = state\r\n\r\n  useEffect(() => act(ACTION.CONTAINER_SIZE_CHANGE, containerSize), [containerSize])\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = ({ which }) => act(ACTION.KEY_DOWN, which)\r\n    const onKeyUp = ({ which }) => act(ACTION.KEY_UP, which)\r\n    const tick = () => act(ACTION.TICK)\r\n\r\n    const timerId = setInterval(tick, UPDATE_EVERY)\r\n    const unregisterKeydown = registerListener('keydown', onKeyDown)\r\n    const unregisterKeyup = registerListener('keyup', onKeyUp)\r\n    return () => {\r\n      clearInterval(timerId)\r\n      unregisterKeydown()\r\n      unregisterKeyup()\r\n    }\r\n  }, [])\r\n  \r\n  const viewWidth = projectDistance(width)\r\n  const unit = projectDistance(ball.radius)\r\n  return (\r\n    <svg width={viewWidth} height={projectDistance(height)} className='scene'>\r\n      <Level unit={unit} level={level} />\r\n      <Lives\r\n        lives={lives}\r\n        containerWidth={viewWidth}\r\n        unit={unit}\r\n      />\r\n      {blocks.map(({ density, position, width, height }) => (\r\n        <Block\r\n       \r\n          density={density}\r\n          key={`${position.x}-${position.y}`}\r\n          width={projectDistance(width)}\r\n          height={projectDistance(height)}\r\n          {...projectVector(position)}\r\n        />)\r\n      )}\r\n      <Paddle width={projectDistance(paddle.width)} height={projectDistance(paddle.height)} {...projectVector(paddle.position)} />\r\n      <Ball {...projectVector(ball.center)} radius={unit} />\r\n    </svg>\r\n  )\r\n}","import React, { useRef, useEffect, useState } from 'react'\r\n\r\nimport Scene from './scene'\r\nimport { registerListener } from '../utils'\r\n\r\nconst Page=()=> {\r\n  const sceneContainer = useRef()\r\n  const [size, setSize] = useState()\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      const { width, height } = sceneContainer.current.getBoundingClientRect()\r\n      setSize({ width, height })\r\n    }\r\n    const unregisterResizeListener = registerListener('resize', onResize)\r\n    onResize()\r\n    return unregisterResizeListener\r\n  }, [])\r\n\r\n  return (\r\n    <div className='page'>\r\n      <div className='scene-container' ref={sceneContainer}>\r\n        {size && <Scene width={size.width} height={size.height} />}\r\n      </div>\r\n    </div>\r\n  )\r\n};export default Page","import React, { useEffect } from 'react';\r\nimport Load from './components/load';\r\nimport Page from './components/page';\r\nimport { useState } from 'react';\r\nconst App=()=>{\r\n    const[loa,setLoa]=useState(true)\r\n    useEffect(\r\n        ()=>{setTimeout(()=>setLoa(false),4000)}\r\n    ,[])\r\n    return(<div>\r\n    {loa?<Load/>\r\n   : <Page/>\r\n    }</div> )\r\n    \r\n};export default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}